normalized_data = myData
#for(i in 1:nrow(myData_filtered_by_linear_index)){
#    for(j in 1:nrow(normalized_data)){
#      if(myData_filtered_by_linear_index[i,2] == normalized_data[j,2]){
#        result = as.numeric(myData_filtered_by_linear_index[i,4])/as.numeric(normalized_data[j,4])
#        if(is.nan(result) || is.infinite(result)){
#          result = 0
#        }
#        normalized_data[j,4] = result
#      }
#  }
#}
normalize <- function(row){
for(i in 1:nrow(myData_filtered_by_linear_index)){
if(row[2] == myData_filtered_by_linear_index[i,2]){
print(row)
}
}
}
apply(normalized_data,FUN=normalize)
normalized_data_table = data.table(normalized_data)
normalized_data_agg_sum_index <- as.data.frame(normalized_data_table[, sum(count, na.rm = TRUE),by = list(index)])
myData_filtered_by_linear_index = as.matrix(subset(myData,grepl("Linear",index)))
normalized_data = myData
#for(i in 1:nrow(myData_filtered_by_linear_index)){
#    for(j in 1:nrow(normalized_data)){
#      if(myData_filtered_by_linear_index[i,2] == normalized_data[j,2]){
#        result = as.numeric(myData_filtered_by_linear_index[i,4])/as.numeric(normalized_data[j,4])
#        if(is.nan(result) || is.infinite(result)){
#          result = 0
#        }
#        normalized_data[j,4] = result
#      }
#  }
#}
normalize <- function(row){
for(i in 1:nrow(myData_filtered_by_linear_index)){
if(row[2] == myData_filtered_by_linear_index[i,2]){
print(row)
}
}
}
lapply(normalized_data,normalize)
normalized_data_table = data.table(normalized_data)
normalized_data_agg_sum_index <- as.data.frame(normalized_data_table[, sum(count, na.rm = TRUE),by = list(index)])
myData_filtered_by_linear_index = as.matrix(subset(myData,grepl("Linear",index)))
normalized_data = myData
#for(i in 1:nrow(myData_filtered_by_linear_index)){
#    for(j in 1:nrow(normalized_data)){
#      if(myData_filtered_by_linear_index[i,2] == normalized_data[j,2]){
#        result = as.numeric(myData_filtered_by_linear_index[i,4])/as.numeric(normalized_data[j,4])
#        if(is.nan(result) || is.infinite(result)){
#          result = 0
#        }
#        normalized_data[j,4] = result
#      }
#  }
#}
lapply(normalized_data, function(row){
for(i in 1:nrow(myData_filtered_by_linear_index)){
if(row[2] == myData_filtered_by_linear_index[i,2]){
print(row)
}
}
}
)
normalized_data_table = data.table(normalized_data)
normalized_data_agg_sum_index <- as.data.frame(normalized_data_table[, sum(count, na.rm = TRUE),by = list(index)])
myData_filtered_by_linear_index = as.matrix(subset(myData,grepl("Linear",index)))
normalized_data = myData
#for(i in 1:nrow(myData_filtered_by_linear_index)){
#    for(j in 1:nrow(normalized_data)){
#      if(myData_filtered_by_linear_index[i,2] == normalized_data[j,2]){
#        result = as.numeric(myData_filtered_by_linear_index[i,4])/as.numeric(normalized_data[j,4])
#        if(is.nan(result) || is.infinite(result)){
#          result = 0
#        }
#        normalized_data[j,4] = result
#      }
#  }
#}
apply(normalized_data,1, function(row){
for(i in 1:nrow(myData_filtered_by_linear_index)){
if(row[2] == myData_filtered_by_linear_index[i,2]){
}
}
}
)
myData_filtered_by_linear_index = as.matrix(subset(myData,grepl("Linear",index)))
normalized_data = myData
#for(i in 1:nrow(myData_filtered_by_linear_index)){
#    for(j in 1:nrow(normalized_data)){
#      if(myData_filtered_by_linear_index[i,2] == normalized_data[j,2]){
#        result = as.numeric(myData_filtered_by_linear_index[i,4])/as.numeric(normalized_data[j,4])
#        if(is.nan(result) || is.infinite(result)){
#          result = 0
#        }
#        normalized_data[j,4] = result
#      }
#  }
#}
apply(normalized_data,1, function(row){
for(i in 1:nrow(myData_filtered_by_linear_index)){
if(row[2] == myData_filtered_by_linear_index[i,2]){
println(row)
}
}
}
)
normalized_data_table = data.table(normalized_data)
normalized_data_agg_sum_index <- as.data.frame(normalized_data_table[, sum(count, na.rm = TRUE),by = list(index)])
myData_filtered_by_linear_index = as.matrix(subset(myData,grepl("Linear",index)))
normalized_data = myData
#for(i in 1:nrow(myData_filtered_by_linear_index)){
#    for(j in 1:nrow(normalized_data)){
#      if(myData_filtered_by_linear_index[i,2] == normalized_data[j,2]){
#        result = as.numeric(myData_filtered_by_linear_index[i,4])/as.numeric(normalized_data[j,4])
#        if(is.nan(result) || is.infinite(result)){
#          result = 0
#        }
#        normalized_data[j,4] = result
#      }
#  }
#}
apply(normalized_data,1, function(row){
for(i in 1:nrow(myData_filtered_by_linear_index)){
if(row[2] == myData_filtered_by_linear_index[i,2]){
print(row)
}
}
}
)
myData_filtered_by_linear_index = as.matrix(subset(myData,grepl("Linear",index)))
normalized_data = myData
#for(i in 1:nrow(myData_filtered_by_linear_index)){
#    for(j in 1:nrow(normalized_data)){
#      if(myData_filtered_by_linear_index[i,2] == normalized_data[j,2]){
#        result = as.numeric(myData_filtered_by_linear_index[i,4])/as.numeric(normalized_data[j,4])
#        if(is.nan(result) || is.infinite(result)){
#          result = 0
#        }
#        normalized_data[j,4] = result
#      }
#  }
#}
apply(normalized_data,1, function(row){
for(i in 1:nrow(myData_filtered_by_linear_index)){
if(row[2] == myData_filtered_by_linear_index[i,2]){
row[4]/myData_filtered_by_linear_index[i,4]
}
}
}
)
normalized_data_table = data.table(normalized_data)
normalized_data_agg_sum_index <- as.data.frame(normalized_data_table[, sum(count, na.rm = TRUE),by = list(index)])
normalized_data[4]
normalized_data[4,]
normalized_data[,4]
normalized_data[,4] <- apply(normalized_data[,4],as.numeric(x))
normalized_data[,4] <- apply(normalized_data[,4],1,as.numeric(x))
normalized_data[,4] <- apply(normalized_data[,4],1,as.numeric())
as.numeric(normalized_data[,4])
myData_filtered_by_linear_index = as.matrix(subset(myData,grepl("Linear",index)))
normalized_data = myData
#for(i in 1:nrow(myData_filtered_by_linear_index)){
#    for(j in 1:nrow(normalized_data)){
#      if(myData_filtered_by_linear_index[i,2] == normalized_data[j,2]){
#        result = as.numeric(myData_filtered_by_linear_index[i,4])/as.numeric(normalized_data[j,4])
#        if(is.nan(result) || is.infinite(result)){
#          result = 0
#        }
#        normalized_data[j,4] = result
#      }
#  }
#}
normalized_data[,4] = as.numeric(normalized_data[,4])
apply(normalized_data,1, function(row){
for(i in 1:nrow(myData_filtered_by_linear_index)){
if(row[2] == myData_filtered_by_linear_index[i,2]){
row[4]/myData_filtered_by_linear_index[i,4]
}
}
}
)
normalized_data_table = data.table(normalized_data)
normalized_data_agg_sum_index <- as.data.frame(normalized_data_table[, sum(count, na.rm = TRUE),by = list(index)])
myData[,4] = as.numeric(myData[,4])
myData_filtered_by_linear_index = as.matrix(subset(myData,grepl("Linear",index)))
normalized_data = myData
#for(i in 1:nrow(myData_filtered_by_linear_index)){
#    for(j in 1:nrow(normalized_data)){
#      if(myData_filtered_by_linear_index[i,2] == normalized_data[j,2]){
#        result = as.numeric(myData_filtered_by_linear_index[i,4])/as.numeric(normalized_data[j,4])
#        if(is.nan(result) || is.infinite(result)){
#          result = 0
#        }
#        normalized_data[j,4] = result
#      }
#  }
#}
apply(normalized_data,1, function(row){
for(i in 1:nrow(myData_filtered_by_linear_index)){
if(row[2] == myData_filtered_by_linear_index[i,2]){
row[4]/myData_filtered_by_linear_index[i,4]
}
}
}
)
normalized_data_table = data.table(normalized_data)
normalized_data_agg_sum_index <- as.data.frame(normalized_data_table[, sum(count, na.rm = TRUE),by = list(index)])
myData[,4] = as.numeric(myData[,4])
myData_filtered_by_linear_index = as.matrix(subset(myData,grepl("Linear",index)))
normalized_data = myData
#for(i in 1:nrow(myData_filtered_by_linear_index)){
#    for(j in 1:nrow(normalized_data)){
#      if(myData_filtered_by_linear_index[i,2] == normalized_data[j,2]){
#        result = as.numeric(myData_filtered_by_linear_index[i,4])/as.numeric(normalized_data[j,4])
#        if(is.nan(result) || is.infinite(result)){
#          result = 0
#        }
#        normalized_data[j,4] = result
#      }
#  }
#}
apply(normalized_data,1, function(row){
for(i in 1:nrow(myData_filtered_by_linear_index)){
if(row[2] == myData_filtered_by_linear_index[i,2]){
res = row[4]/myData_filtered_by_linear_index[i,4]
0
}
}
}
)
normalized_data_table = data.table(normalized_data)
normalized_data_agg_sum_index <- as.data.frame(normalized_data_table[, sum(count, na.rm = TRUE),by = list(index)])
as.numeric(normalized_data[,4])
myData[,4] = as.numeric(myData[,4])
myData_filtered_by_linear_index = as.matrix(subset(myData,grepl("Linear",index)))
normalized_data = myData
#for(i in 1:nrow(myData_filtered_by_linear_index)){
#    for(j in 1:nrow(normalized_data)){
#      if(myData_filtered_by_linear_index[i,2] == normalized_data[j,2]){
#        result = as.numeric(myData_filtered_by_linear_index[i,4])/as.numeric(normalized_data[j,4])
#        if(is.nan(result) || is.infinite(result)){
#          result = 0
#        }
#        normalized_data[j,4] = result
#      }
#  }
#}
apply(normalized_data,1, function(row){
for(i in 1:nrow(myData_filtered_by_linear_index)){
if(row[2] == myData_filtered_by_linear_index[i,2]){
res = row[4]/myData_filtered_by_linear_index[i,4]
0
}
}
}
)
normalized_data_table = data.table(normalized_data)
normalized_data_agg_sum_index <- as.data.frame(normalized_data_table[, sum(count, na.rm = TRUE),by = list(index)])
myData[,5] = as.numeric(myData[,4])
myData_filtered_by_linear_index = as.matrix(subset(myData,grepl("Linear",index)))
normalized_data = myData
#for(i in 1:nrow(myData_filtered_by_linear_index)){
#    for(j in 1:nrow(normalized_data)){
#      if(myData_filtered_by_linear_index[i,2] == normalized_data[j,2]){
#        result = as.numeric(myData_filtered_by_linear_index[i,4])/as.numeric(normalized_data[j,4])
#        if(is.nan(result) || is.infinite(result)){
#          result = 0
#        }
#        normalized_data[j,4] = result
#      }
#  }
#}
apply(normalized_data,1, function(row){
for(i in 1:nrow(myData_filtered_by_linear_index)){
if(row[2] == myData_filtered_by_linear_index[i,2]){
res = row[5]/myData_filtered_by_linear_index[i,5]
0
}
}
}
)
normalized_data_table = data.table(normalized_data)
normalized_data_agg_sum_index <- as.data.frame(normalized_data_table[, sum(count, na.rm = TRUE),by = list(index)])
myData[,5] <- as.numeric(myData[,4])
myData_filtered_by_linear_index = as.matrix(subset(myData,grepl("Linear",index)))
normalized_data = myData
#for(i in 1:nrow(myData_filtered_by_linear_index)){
#    for(j in 1:nrow(normalized_data)){
#      if(myData_filtered_by_linear_index[i,2] == normalized_data[j,2]){
#        result = as.numeric(myData_filtered_by_linear_index[i,4])/as.numeric(normalized_data[j,4])
#        if(is.nan(result) || is.infinite(result)){
#          result = 0
#        }
#        normalized_data[j,4] = result
#      }
#  }
#}
apply(normalized_data,1, function(row){
for(i in 1:nrow(myData_filtered_by_linear_index)){
if(row[2] == myData_filtered_by_linear_index[i,2]){
res = row[5]/myData_filtered_by_linear_index[i,5]
0
}
}
}
)
normalized_data_table = data.table(normalized_data)
normalized_data_agg_sum_index <- as.data.frame(normalized_data_table[, sum(count, na.rm = TRUE),by = list(index)])
myData_filtered_by_linear_index = as.matrix(subset(myData,grepl("Linear",index)))
normalized_data = myData
#for(i in 1:nrow(myData_filtered_by_linear_index)){
#    for(j in 1:nrow(normalized_data)){
#      if(myData_filtered_by_linear_index[i,2] == normalized_data[j,2]){
#        result = as.numeric(myData_filtered_by_linear_index[i,4])/as.numeric(normalized_data[j,4])
#        if(is.nan(result) || is.infinite(result)){
#          result = 0
#        }
#        normalized_data[j,4] = result
#      }
#  }
#}
apply(normalized_data,1, function(row){
for(i in 1:nrow(myData_filtered_by_linear_index)){
if(row[2] == myData_filtered_by_linear_index[i,2]){
res = as.numeric(row[4])/as.numeric(myData_filtered_by_linear_index[i,4])
}
}
}
)
myData_filtered_by_linear_index = as.matrix(subset(myData,grepl("Linear",index)))
normalized_data = head(myData)
#for(i in 1:nrow(myData_filtered_by_linear_index)){
#    for(j in 1:nrow(normalized_data)){
#      if(myData_filtered_by_linear_index[i,2] == normalized_data[j,2]){
#        result = as.numeric(myData_filtered_by_linear_index[i,4])/as.numeric(normalized_data[j,4])
#        if(is.nan(result) || is.infinite(result)){
#          result = 0
#        }
#        normalized_data[j,4] = result
#      }
#  }
#}
apply(normalized_data,1, function(row){
for(i in 1:nrow(myData_filtered_by_linear_index)){
if(row[2] == myData_filtered_by_linear_index[i,2]){
res = as.numeric(row[4])/as.numeric(myData_filtered_by_linear_index[i,4])
}
}
}
)
normalized_data_table = data.table(normalized_data)
normalized_data_agg_sum_index <- as.data.frame(normalized_data_table[, sum(count, na.rm = TRUE),by = list(index)])
myData_filtered_by_linear_index = as.matrix(subset(myData,grepl("Linear",index)))
normalized_data = head(myData)
#for(i in 1:nrow(myData_filtered_by_linear_index)){
#    for(j in 1:nrow(normalized_data)){
#      if(myData_filtered_by_linear_index[i,2] == normalized_data[j,2]){
#        result = as.numeric(myData_filtered_by_linear_index[i,4])/as.numeric(normalized_data[j,4])
#        if(is.nan(result) || is.infinite(result)){
#          result = 0
#        }
#        normalized_data[j,4] = result
#      }
#  }
#}
apply(normalized_data,1, function(row){
for(i in 1:nrow(myData_filtered_by_linear_index)){
if(row[2] == myData_filtered_by_linear_index[i,2]){
res = as.numeric(row[4])/as.numeric(myData_filtered_by_linear_index[i,4])
}
}
}
)
normalized_data_table = data.table(normalized_data)
normalized_data_agg_sum_index <- as.data.frame(normalized_data_table[, sum(count, na.rm = TRUE),by = list(index)])
pander(arrange(normalized_data_agg_sum_index,V1,decreasing=TRUE),justify = c('left', 'right'))
myData_filtered_by_linear_index = as.matrix(subset(myData,grepl("Linear",index)))
normalized_data = head(myData,1000)
#for(i in 1:nrow(myData_filtered_by_linear_index)){
#    for(j in 1:nrow(normalized_data)){
#      if(myData_filtered_by_linear_index[i,2] == normalized_data[j,2]){
#        result = as.numeric(myData_filtered_by_linear_index[i,4])/as.numeric(normalized_data[j,4])
#        if(is.nan(result) || is.infinite(result)){
#          result = 0
#        }
#        normalized_data[j,4] = result
#      }
#  }
#}
apply(normalized_data,1, function(row){
for(i in 1:nrow(myData_filtered_by_linear_index)){
if(row[2] == myData_filtered_by_linear_index[i,2]){
res = as.numeric(row[4])/as.numeric(myData_filtered_by_linear_index[i,4])
}
}
}
)
normalized_data_table = data.table(normalized_data)
normalized_data_agg_sum_index <- as.data.frame(normalized_data_table[, sum(count, na.rm = TRUE),by = list(index)])
pander(arrange(normalized_data_agg_sum_index,V1,decreasing=TRUE),justify = c('left', 'right'))
apply(normalized_data,1, function(row){
for(i in 1:nrow(myData_filtered_by_linear_index)){
if(row[2] == myData_filtered_by_linear_index[i,2]){
res = as.numeric(row[4])/as.numeric(myData_filtered_by_linear_index[i,4])
}
}
}
)
myData_filtered_by_linear_index = as.matrix(subset(myData,grepl("Linear",index)))
normalized_data = head(myData,1000)
#for(i in 1:nrow(myData_filtered_by_linear_index)){
#    for(j in 1:nrow(normalized_data)){
#      if(myData_filtered_by_linear_index[i,2] == normalized_data[j,2]){
#        result = as.numeric(myData_filtered_by_linear_index[i,4])/as.numeric(normalized_data[j,4])
#        if(is.nan(result) || is.infinite(result)){
#          result = 0
#        }
#        normalized_data[j,4] = result
#      }
#  }
#}
apply(normalized_data,1, function(row){
for(i in 1:nrow(myData_filtered_by_linear_index)){
if(row[2] == myData_filtered_by_linear_index[i,2]){
row[4] = res = as.numeric(row[4])/as.numeric(myData_filtered_by_linear_index[i,4])
}
}
}
)
normalized_data_table = data.table(normalized_data)
normalized_data_agg_sum_index <- as.data.frame(normalized_data_table[, sum(count, na.rm = TRUE),by = list(index)])
pander(arrange(normalized_data_agg_sum_index,V1,decreasing=TRUE),justify = c('left', 'right'))
)
row[4] = as.numeric(row[4])/as.numeric(myData_filtered_by_linear_index[i,4])
myData_filtered_by_linear_index = as.matrix(subset(myData,grepl("Linear",index)))
normalized_data = head(myData,1000)
for(i in 1:nrow(myData_filtered_by_linear_index)){
for(j in 1:nrow(normalized_data)){
if(myData_filtered_by_linear_index[i,2] == normalized_data[j,2]){
result = as.numeric(myData_filtered_by_linear_index[i,4])/as.numeric(normalized_data[j,4])
if(is.nan(result) || is.infinite(result)){
result = 0
}
normalized_data[j,4] = result
}
}
}
normalized_data_table = data.table(normalized_data)
normalized_data_agg_sum_index <- as.data.frame(normalized_data_table[, sum(count, na.rm = TRUE),by = list(index)])
pander(arrange(normalized_data_agg_sum_index,V1,decreasing=TRUE),justify = c('left', 'right'))
#aggregations
myDataTable = data.table(myData)
myData_agg_sum_index <- as.data.frame(myDataTable[, sum(count, na.rm = TRUE),by = list(index)])
set.caption("aggregated sum for all indexes")
pander(arrange(myData_agg_sum_index,V1,decreasing=TRUE),justify = c('left', 'right'))
myData_filtered_by_linear_index = as.matrix(subset(myData,grepl("Linear",index)))
normalized_data = myData
for(i in 1:nrow(myData_filtered_by_linear_index)){
filtered = subset(normalized_data,splash == myData_filtered_by_linear_index[i,2])
for(j in 1:nrow(filtered)){
result = as.numeric(myData_filtered_by_linear_index[i,4])/as.numeric(normalized_data[j,4])
if(is.nan(result) || is.infinite(result)){
result = 0
}
normalized_data[j,4] = result
}
}
normalized_data_table = data.table(normalized_data)
normalized_data_agg_sum_index <- as.data.frame(normalized_data_table[, sum(count, na.rm = TRUE),by = list(index)])
View(myData_filtered_by_index)
View(filtered)
View(filtered)
```{r setup,echo=FALSE}
#install.packages("data.table")
library(data.table)
library(pander)
library(plyr)
panderOptions('table.split.table', Inf)
#load data table
myData = read.table("result.txt",col.names = c('inchi','splash','index','count','duration','index_size'))
#aggregations
myDataTable = data.table(myData)
myData_agg_sum_index <- as.data.frame(myDataTable[, sum(count, na.rm = TRUE),by = list(index)])
set.caption("aggregated sum for all indexes")
pander(arrange(myData_agg_sum_index,V1,decreasing=TRUE),justify = c('left', 'right'))
myData_filtered_by_linear_index = as.matrix(subset(myData,grepl("Linear",index)))
normalized_data = myData
for(i in 1:nrow(myData_filtered_by_linear_index)){
filtered = subset(normalized_data,splash == myData_filtered_by_linear_index[i,2])
for(j in 1:nrow(filtered)){
result = as.numeric(myData_filtered_by_linear_index[i,4])/as.numeric(normalized_data[j,4])
if(is.nan(result) || is.infinite(result)){
result = 0
}
normalized_data[j,4] = result
}
}
normalized_data_table = data.table(normalized_data)
normalized_data_agg_sum_index <- as.data.frame(normalized_data_table[, sum(count, na.rm = TRUE),by = list(index)])
View(myData)
View(myData)
View(myDataTable)
View(myDataTable)
View(myData_agg_sum_index)
View(myData_agg_sum_index)
View(normalized_data_agg_sum_index)
View(normalized_data_agg_sum_index)
View(myData)
View(myData)
