install.packages('sqldf')
install.packages('sqldf')
install.packages('sqldf')
install.packages('ggplot2')
install.packages('RPostgreSQL')
install.packages('gplots')
install.packages('pander')
install.packages('stringr')
install.packages('XML')
metaDataTypeReport = sqldf("
select get_type(string_value), count(*) as type,b.name from meta_data_value a, meta_data b, meta_data_category c where a.meta_data_id = b.id and b.category_id = c.id and lower(c.name) not in ( 'annotation' ,'external id') group by get_type(string_value), b.name
")
source('~/.active-rstudio-document', echo=TRUE)
View(metaDataTypeReport)
metaDataTypeReport = sqldf("
select get_type(string_value) as type, count(*) as count,b.name from meta_data_value a, meta_data b, meta_data_category c where a.meta_data_id = b.id and b.category_id = c.id and lower(c.name) not in ( 'annotation' ,'external id') group by get_type(string_value), b.name
")
metaDataTypeReport
qplot(data=instrumentTypeReport,x=instrumentTypeReport$value,y=instrumentTypeReport$count,geom="bar",stat="identity",xlab="Instrument Type",ylab="count of spectra")+ theme(axis.text.x = element_text(angle = 90, hjust = 1)) + coord_flip()
qplot(data=metaDataTypeReport,x=metaDataTypeReport$name,y=metaDataTypeReport$count,geom="bar",stat="identity",xlab="Meta Data Type",ylab="count of values")+ theme(axis.text.x = element_text(angle = 90, hjust = 1)) + coord_flip()
qplot(data=metaDataTypeReport,x=metaDataTypeReport$name,y=metaDataTypeReport$count,geom="bar",stat="identity",xlab="Meta Data Type",ylab="count of values", fill=metaDataTypeReport$type)+ theme(axis.text.x = element_text(angle = 90, hjust = 1)) + coord_flip()
```{r,echo=FALSE,fig.width=7, fig.height=7, fig.align='center'}
# Chunk 1
#install.packages("data.table")
library(data.table)
# Chunk 2
#load data table
myData = read.table("result.txt",col.names = c('inchi','splash','index','count'))
referenceIndexes = myData[like(index,"Linear")]
#aggregations
myDataTable = data.table(myData)
myData_agg_sum_index <- as.data.frame(myDataTable[, sum(count, na.rm = TRUE),by = list(index)])
# Chunk 1
#install.packages("data.table")
library(data.table)
# Chunk 2
#load data table
myData = read.table("result.txt",col.names = c('inchi','splash','index','count'))
referenceIndexes = myData[like(index,"Linear")]
#aggregations
myDataTable = data.table(myData)
myData_agg_sum_index <- as.data.frame(myDataTable[, sum(count, na.rm = TRUE),by = list(index)])
# Chunk 1
#install.packages("data.table")
library(data.table)
# Chunk 2
#load data table
myData = read.table("result.txt",col.names = c('inchi','splash','index','count'))
referenceIndexes = myData[like(index,"Linear")]
#aggregations
myDataTable = data.table(myData)
myData_agg_sum_index <- as.data.frame(myDataTable[, sum(count, na.rm = TRUE),by = list(index)])
myData = read.table("result.txt",col.names = c('inchi','splash','index','count'))
getpwd()
myData = read.table("result.txt",col.names = c('inchi','splash','index','count'))
setwd("~/workspace/spectra-hash/utilities/evaluation/src/main/R")
myData = read.table("result.txt",col.names = c('inchi','splash','index','count'))
# Chunk 1
#install.packages("data.table")
library(data.table)
# Chunk 2
#load data table
myData = read.table("result.txt",col.names = c('inchi','splash','index','count'))
referenceIndexes = myData[like(index,"Linear")]
#aggregations
myDataTable = data.table(myData)
myData_agg_sum_index <- as.data.frame(myDataTable[, sum(count, na.rm = TRUE),by = list(index)])
# Chunk 1
#install.packages("data.table")
library(data.table)
library(pander)
panderOptions('table.split.table', Inf)
# Chunk 2
#load data table
myData = read.table("result.txt",col.names = c('inchi','splash','index','count'))
referenceIndexes = myData[like(index,"Linear")]
# Chunk 3
#aggregations
myDataTable = data.table(myData)
myData_agg_sum_index <- as.data.frame(myDataTable[, sum(count, na.rm = TRUE),by = list(index)])
# Chunk 4
set.caption("aggregated sum for all indexes")
pander(myData_agg_sum_index)
setwd("~/workspace/spectra-hash/utilities/evaluation/src/main/R")
# Chunk 1
#install.packages("data.table")
library(data.table)
library(pander)
panderOptions('table.split.table', Inf)
# Chunk 2
#load data table
myData = read.table("result.txt",col.names = c('inchi','splash','index','count'))
referenceIndexes = myData[like(index,"Linear")]
# Chunk 3
#aggregations
myDataTable = data.table(myData)
myData_agg_sum_index <- as.data.frame(myDataTable[, sum(count, na.rm = TRUE),by = list(index)])
# Chunk 4
set.caption("aggregated sum for all indexes")
pander(myData_agg_sum_index)
